// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sidebar snapshot test 1`] = `
<div
  className="sidebar-container"
>
  <img
    className="sidebar-logo"
    src="test-file-stub"
  />
  <h2
    className="logo-name"
  >
    FeedPile
  </h2>
  <SelectableList
    defaultValue={1}
  >
    <ListItem
      autoGenerateNestedIndicator={true}
      disableKeyboardFocus={false}
      disabled={false}
      initiallyOpen={false}
      insetChildren={false}
      leftIcon={<pure(List) />}
      nestedItems={Array []}
      nestedLevel={0}
      onClick={[Function]}
      onKeyboardFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onNestedListToggle={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      open={null}
      primaryText="All Articles"
      primaryTogglesNestedList={false}
      secondaryTextLines={1}
      value={1}
    />
    <ListItem
      autoGenerateNestedIndicator={true}
      disableKeyboardFocus={false}
      disabled={false}
      initiallyOpen={false}
      insetChildren={false}
      leftIcon={<pure(Star) />}
      nestedItems={Array []}
      nestedLevel={0}
      onKeyboardFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onNestedListToggle={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      open={null}
      primaryText="Starred"
      primaryTogglesNestedList={false}
      secondaryTextLines={1}
      value={2}
    />
    <ListItem
      autoGenerateNestedIndicator={true}
      disableKeyboardFocus={false}
      disabled={false}
      initiallyOpen={false}
      insetChildren={false}
      leftIcon={<pure(Archive) />}
      nestedItems={Array []}
      nestedLevel={0}
      onKeyboardFocus={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onNestedListToggle={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      open={null}
      primaryText="Archived"
      primaryTogglesNestedList={false}
      secondaryTextLines={1}
      value={3}
    />
  </SelectableList>
  <span
    className="refresh-icon"
  >
    <IconButton
      className="refresh-icon"
      disableTouchRipple={false}
      disabled={false}
      iconStyle={
        Object {
          "height": 36,
          "width": 36,
        }
      }
      style={
        Object {
          "height": 72,
          "padding": 16,
          "width": 72,
        }
      }
      tooltipPosition="bottom-center"
      touch={false}
    >
      <pure(Refresh) />
    </IconButton>
  </span>
  <span
    className="archive-icon"
  >
    <IconButton
      className="add-icon"
      disableTouchRipple={false}
      disabled={false}
      iconStyle={
        Object {
          "height": 36,
          "width": 36,
        }
      }
      onClick={[Function]}
      style={
        Object {
          "height": 72,
          "padding": 16,
          "width": 72,
        }
      }
      tooltipPosition="bottom-center"
      touch={false}
    >
      <pure(AddCircle) />
    </IconButton>
  </span>
  <span
    className="archive-icon"
  >
    <IconButton
      className="archive-icon"
      disableTouchRipple={false}
      disabled={false}
      iconStyle={
        Object {
          "height": 36,
          "width": 36,
        }
      }
      style={
        Object {
          "height": 72,
          "padding": 16,
          "width": 72,
        }
      }
      tooltipPosition="bottom-center"
      touch={false}
    >
      <pure(Archive) />
    </IconButton>
  </span>
  <Connect(AddFeed) />
</div>
`;
